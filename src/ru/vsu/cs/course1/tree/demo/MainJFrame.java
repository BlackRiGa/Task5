package ru.vsu.cs.course1.tree.demo;

import java.awt.BorderLayout;
import java.awt.Graphics;
import java.awt.Point;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;
import java.util.stream.StreamSupport;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import ru.vsu.cs.course1.tree.BinaryTree;
import ru.vsu.cs.course1.tree.bst.rb.RBTree;
import ru.vsu.cs.course1.tree.BinaryTreePainter;
import ru.vsu.cs.course1.tree.bst.SimpleBSTree;
import ru.vsu.cs.course1.tree.bst.avl.AVLTree;
import ru.vsu.cs.course1.tree.bst.avl.AVLTreeMap;
import ru.vsu.cs.course1.tree.bst.rb.RBTreeMap;
import ru.vsu.cs.util.ArrayUtils;
import ru.vsu.cs.util.SwingUtils;
import ru.vsu.cs.course1.tree.DefaultBinaryTree;
import ru.vsu.cs.course1.tree.bst.DefaultBSTree;
import ru.vsu.cs.course1.tree.bst.SimpleBSTreeMap;

public class MainJFrame extends javax.swing.JFrame {

    DefaultBinaryTree<Integer> tree = new BinaryTree<>();

    private JPanel paintPanel = null;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();

        paintAreaJPanel.setLayout(new BorderLayout());
        paintPanel = new JPanel() {
            @Override
            public void paintComponent(Graphics gr) {
                super.paintComponent(gr);
                Point size = BinaryTreePainter.paint(tree, gr);
                SwingUtils.setFixedSize(paintPanel, size.x, size.y);
            }
        };
        JScrollPane paintJScrollPane = new JScrollPane(paintPanel);
        paintAreaJPanel.add(paintJScrollPane);
        //SwingUtils.setFixedSize(paintPanel, 5000, 2000);
        mainJSplitPane.setDividerLocation(0.5);
        mainJSplitPane.setResizeWeight(1.0);
    }

    public void repaintTree() {
        paintPanel.repaint();
    }

    private void showSystemOut(Runnable action) {
        PrintStream oldOut = System.out;
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try {
            System.setOut(new PrintStream(baos, true, "UTF-8"));

            action.run();

            systemOutJTextArea.setText(baos.toString("UTF-8"));
        } catch (UnsupportedEncodingException impossible) {
        }
        System.setOut(oldOut);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        mainJSplitPane = new javax.swing.JSplitPane();
        leftJPanel = new javax.swing.JPanel();
        addJButton = new javax.swing.JButton();
        makeBSTreeJButton2 = new javax.swing.JButton();
        bracketNotationJTextField = new javax.swing.JTextField();
        makeRBTreeJButton = new javax.swing.JButton();
        valuesJTextField = new javax.swing.JTextField();
        removeJButton = new javax.swing.JButton();
        addValueJTextArea = new javax.swing.JTextField();
        makeTreeJButton = new javax.swing.JButton();
        valuesJLabel = new javax.swing.JLabel();
        makeAVLTreeJButton = new javax.swing.JButton();
        paintAreaJPanel = new javax.swing.JPanel();
        randomJLabel = new javax.swing.JLabel();
        randomCountJSpinner = new javax.swing.JSpinner();
        randomGenerateJButton = new javax.swing.JButton();
        sortValuesJButton = new javax.swing.JButton();
        makeBSTreeJButton1 = new javax.swing.JButton();
        jButtonDeletedElement = new javax.swing.JButton();
        rightJPanel = new javax.swing.JPanel();
        preOrderTraversJButton = new javax.swing.JButton();
        inOrderTraversJButton = new javax.swing.JButton();
        postOrderTraversJButton = new javax.swing.JButton();
        byLevelTraversJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        systemOutJTextArea = new javax.swing.JTextArea();
        mainJMenuBar = new javax.swing.JMenuBar();
        testingJMenu = new javax.swing.JMenu();
        correctTestSimpleBSTreeMapJMenuItem = new javax.swing.JMenuItem();
        correctTestAVLTreeMapJMenuItem = new javax.swing.JMenuItem();
        correctTestRBTreeMapJMenuItem = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Операции с деревьями");

        mainJSplitPane.setBorder(null);

        addJButton.setText("Добавить");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        makeBSTreeJButton2.setText("Построить дерево поиска");
        makeBSTreeJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeBSTreeJButton2ActionPerformed(evt);
            }
        });

        bracketNotationJTextField.setText("8 (3 (1 (5), 6), 10 (, 15 (12, 18)))");

        makeRBTreeJButton.setText("Построить красно-черное дерево");
        makeRBTreeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeRBTreeJButtonActionPerformed(evt);
            }
        });

        valuesJTextField.setText("0");

        removeJButton.setText("Удалить");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });

        addValueJTextArea.setText("10");

        makeTreeJButton.setText("Построить дерево");
        makeTreeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeTreeJButtonActionPerformed(evt);
            }
        });

        valuesJLabel.setText("Значения для построения дерева:");

        makeAVLTreeJButton.setText("Построить АВЛ-дерево");
        makeAVLTreeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeAVLTreeJButtonActionPerformed(evt);
            }
        });

        paintAreaJPanel.setLayout(new javax.swing.BoxLayout(paintAreaJPanel, javax.swing.BoxLayout.LINE_AXIS));

        randomJLabel.setText("случайных чисел");

        randomCountJSpinner.setModel(new javax.swing.SpinnerNumberModel(30, null, null, 1));

        randomGenerateJButton.setText("Сгенерировать");
        randomGenerateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomGenerateJButtonActionPerformed(evt);
            }
        });

        sortValuesJButton.setText("Упорядочить");
        sortValuesJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortValuesJButtonActionPerformed(evt);
            }
        });

        makeBSTreeJButton1.setText("Построить дерево поиска");
        makeBSTreeJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeBSTreeJButton1ActionPerformed(evt);
            }
        });

        jButtonDeletedElement.setText("Задача 20");
        jButtonDeletedElement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletedElementActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftJPanelLayout = new javax.swing.GroupLayout(leftJPanel);
        leftJPanel.setLayout(leftJPanelLayout);
        leftJPanelLayout.setHorizontalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valuesJTextField)
                    .addComponent(bracketNotationJTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(paintAreaJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valuesJLabel)
                            .addGroup(leftJPanelLayout.createSequentialGroup()
                                .addComponent(addValueJTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeJButton))
                            .addGroup(leftJPanelLayout.createSequentialGroup()
                                .addComponent(makeTreeJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(makeBSTreeJButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDeletedElement))
                            .addGroup(leftJPanelLayout.createSequentialGroup()
                                .addComponent(makeBSTreeJButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(makeAVLTreeJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(makeRBTreeJButton))
                            .addGroup(leftJPanelLayout.createSequentialGroup()
                                .addComponent(randomCountJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(randomJLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(randomGenerateJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sortValuesJButton)))
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        leftJPanelLayout.setVerticalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(valuesJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bracketNotationJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeTreeJButton)
                    .addComponent(makeBSTreeJButton1)
                    .addComponent(jButtonDeletedElement))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valuesJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(randomJLabel)
                    .addComponent(randomCountJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(randomGenerateJButton)
                    .addComponent(sortValuesJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeAVLTreeJButton)
                    .addComponent(makeRBTreeJButton)
                    .addComponent(makeBSTreeJButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addJButton)
                    .addComponent(addValueJTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paintAreaJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainJSplitPane.setLeftComponent(leftJPanel);

        preOrderTraversJButton.setText("Прямой обход");
        preOrderTraversJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preOrderTraversJButtonActionPerformed(evt);
            }
        });

        inOrderTraversJButton.setText("Симметричный обход");
        inOrderTraversJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inOrderTraversJButtonActionPerformed(evt);
            }
        });

        postOrderTraversJButton.setText("Обратный обход");
        postOrderTraversJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postOrderTraversJButtonActionPerformed(evt);
            }
        });

        byLevelTraversJButton.setText("Обход в ширину");
        byLevelTraversJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byLevelTraversJButtonActionPerformed(evt);
            }
        });

        systemOutJTextArea.setColumns(20);
        systemOutJTextArea.setRows(5);
        jScrollPane1.setViewportView(systemOutJTextArea);

        javax.swing.GroupLayout rightJPanelLayout = new javax.swing.GroupLayout(rightJPanel);
        rightJPanel.setLayout(rightJPanelLayout);
        rightJPanelLayout.setHorizontalGroup(
            rightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rightJPanelLayout.createSequentialGroup()
                        .addGroup(rightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(postOrderTraversJButton)
                            .addComponent(preOrderTraversJButton)
                            .addComponent(inOrderTraversJButton)
                            .addComponent(byLevelTraversJButton))
                        .addGap(0, 89, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        rightJPanelLayout.setVerticalGroup(
            rightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(preOrderTraversJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inOrderTraversJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(postOrderTraversJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(byLevelTraversJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainJSplitPane.setRightComponent(rightJPanel);

        testingJMenu.setText("Тестирование");

        correctTestSimpleBSTreeMapJMenuItem.setText("Корректность SimpleBSTreeMap");
        correctTestSimpleBSTreeMapJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correctTestSimpleBSTreeMapJMenuItemActionPerformed(evt);
            }
        });
        testingJMenu.add(correctTestSimpleBSTreeMapJMenuItem);

        correctTestAVLTreeMapJMenuItem.setText("Корректность AVLTreeMap");
        correctTestAVLTreeMapJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correctTestAVLTreeMapJMenuItemActionPerformed(evt);
            }
        });
        testingJMenu.add(correctTestAVLTreeMapJMenuItem);

        correctTestRBTreeMapJMenuItem.setText("Корректность RBTreeMap");
        correctTestRBTreeMapJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correctTestRBTreeMapJMenuItemActionPerformed(evt);
            }
        });
        testingJMenu.add(correctTestRBTreeMapJMenuItem);

        mainJMenuBar.add(testingJMenu);

        setJMenuBar(mainJMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainJSplitPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainJSplitPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void postOrderTraversJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postOrderTraversJButtonActionPerformed
        showSystemOut(() -> {
            System.out.println("Посетитель:");
            tree.postOrderVisit((value, level) -> {
                System.out.println(value);
            });
            System.out.println("Итератор:");
            for (Integer i : tree.postOrderValues()) {
                System.out.println(i);
            }
        });
    }//GEN-LAST:event_postOrderTraversJButtonActionPerformed

    private void preOrderTraversJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preOrderTraversJButtonActionPerformed
        showSystemOut(() -> {
            System.out.println("Посетитель:");
            tree.preOrderVisit((value, level) -> {
                System.out.println(value);
            });
            System.out.println("Итератор:");
            for (Integer i : tree.preOrderValues()) {
                System.out.println(i);
            }
        });
    }//GEN-LAST:event_preOrderTraversJButtonActionPerformed

    private void inOrderTraversJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inOrderTraversJButtonActionPerformed
        showSystemOut(() -> {
            System.out.println("Посетитель:");
            tree.inOrderVisit((value, level) -> {
                System.out.println(value);
            });
            System.out.println("Итератор:");
            for (Integer i : tree.inOrderValues()) {
                System.out.println(i);
            }
        });
    }//GEN-LAST:event_inOrderTraversJButtonActionPerformed

    private void byLevelTraversJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byLevelTraversJButtonActionPerformed
        showSystemOut(() -> {
            System.out.println("Посетитель:");
            tree.byLevelVisit((value, level) -> {
                System.out.println(value);
            });
            System.out.println("Итератор:");
            for (Integer i : tree.byLevelValues()) {
                System.out.println(i);
            }
        });
    }//GEN-LAST:event_byLevelTraversJButtonActionPerformed

    private void correctTestAVLTreeMapJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correctTestAVLTreeMapJMenuItemActionPerformed
        showSystemOut(() -> {
            MapTest.correctTest(new AVLTreeMap<Integer, Integer>());
        });
    }//GEN-LAST:event_correctTestAVLTreeMapJMenuItemActionPerformed

    private void correctTestRBTreeMapJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correctTestRBTreeMapJMenuItemActionPerformed
        showSystemOut(() -> {
            MapTest.correctTest(new RBTreeMap<Integer, Integer>());
        });
    }//GEN-LAST:event_correctTestRBTreeMapJMenuItemActionPerformed

    private void makeTreeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeTreeJButtonActionPerformed
        try {
            BinaryTree<Integer> tree = new BinaryTree<>(s -> Integer.parseInt(s));
            tree.fromBracketNotation(bracketNotationJTextField.getText());
            this.tree = tree;
            repaintTree();
        } catch (Exception ex) {
            SwingUtils.showErrorMessageBox(ex);
        }
    }//GEN-LAST:event_makeTreeJButtonActionPerformed

    private void makeBSTFromValue(DefaultBSTree tree) {
        int[] values = ArrayUtils.toIntArray(valuesJTextField.getText());
        tree.clear();
        for (int v : values) {
            tree.put(v);
        }
        this.tree = tree;
        repaintTree();
    }

    private void makeRBTreeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeRBTreeJButtonActionPerformed
        try {
            makeBSTFromValue(new RBTree<>());
        } catch (Exception ex) {
            SwingUtils.showErrorMessageBox(ex);
        }
    }//GEN-LAST:event_makeRBTreeJButtonActionPerformed

    private void makeAVLTreeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeAVLTreeJButtonActionPerformed
        try {
            makeBSTFromValue(new AVLTree<>());
        } catch (Exception ex) {
            SwingUtils.showErrorMessageBox(ex);
        }
    }//GEN-LAST:event_makeAVLTreeJButtonActionPerformed

    private void makeBSTreeJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeBSTreeJButton2ActionPerformed
        try {
            makeBSTFromValue(new SimpleBSTree<>(s -> Integer.parseInt(s)));
        } catch (Exception ex) {
            SwingUtils.showErrorMessageBox(ex);
        }
    }//GEN-LAST:event_makeBSTreeJButton2ActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
        if (!(tree instanceof DefaultBSTree)) {
            SwingUtils.showInfoMessageBox("Текущее дерево не является деревом поиска!");
            return;
        }
        try {
            ((DefaultBSTree<Integer>) tree).remove(Integer.parseInt(addValueJTextArea.getText()));
            repaintTree();
        } catch (Exception ex) {
            SwingUtils.showErrorMessageBox(ex);
        }
    }//GEN-LAST:event_removeJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        if (!(tree instanceof DefaultBSTree)) {
            SwingUtils.showInfoMessageBox("Текущее дерево не является деревом поиска!");
            return;
        }
        try {
            ((DefaultBSTree<Integer>) tree).put(Integer.parseInt(addValueJTextArea.getText()));
            repaintTree();
        } catch (Exception ex) {
            SwingUtils.showErrorMessageBox(ex);
        }
    }//GEN-LAST:event_addJButtonActionPerformed

    private void randomGenerateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomGenerateJButtonActionPerformed
        int size = ((Integer) randomCountJSpinner.getValue()).intValue();
        int[] arr = ArrayUtils.createRandomIntArray(size, (size <= 50) ? 100 : 1000);
        valuesJTextField.setText(ArrayUtils.toString(arr));
    }//GEN-LAST:event_randomGenerateJButtonActionPerformed

    private void sortValuesJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortValuesJButtonActionPerformed
        try {
            int[] arr = ArrayUtils.toIntArray(valuesJTextField.getText());
            Arrays.sort(arr);
            valuesJTextField.setText(ArrayUtils.toString(arr));
        } catch (Exception ex) {
            SwingUtils.showErrorMessageBox(ex);
        }
    }//GEN-LAST:event_sortValuesJButtonActionPerformed

    private void makeBSTreeJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeBSTreeJButton1ActionPerformed
        try {
            SimpleBSTree<Integer> tree = new SimpleBSTree<>(s -> Integer.parseInt(s));
            tree.fromBracketNotation(bracketNotationJTextField.getText());
            this.tree = tree;
            repaintTree();
        } catch (Exception ex) {
            SwingUtils.showErrorMessageBox(ex);
        }
    }//GEN-LAST:event_makeBSTreeJButton1ActionPerformed

    private void correctTestSimpleBSTreeMapJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correctTestSimpleBSTreeMapJMenuItemActionPerformed
        showSystemOut(() -> {
            MapTest.correctTest(new SimpleBSTreeMap<Integer, Integer>());
        });
    }//GEN-LAST:event_correctTestSimpleBSTreeMapJMenuItemActionPerformed

    private void jButtonDeletedElementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletedElementActionPerformed
        try {
            SimpleBSTree<Integer> tree = new SimpleBSTree<>(s -> Integer.parseInt(s));
            String result = tree.deletedElement(bracketNotationJTextField.getText());
            switch (result) {
                case "More error element":
                    systemOutJTextArea.setText("Заданное дерево невозможно привести к дереву поиска!");
                    break;
                case "No error element":
                    systemOutJTextArea.setText("Нет элемента, который необходимо удалить");
                    break;
                default:
                    StringBuilder res = new StringBuilder();
                    res.append("Можно удалить элемент, который находится по адресу: ").append(result);
                    systemOutJTextArea.setText(res.toString());
                    break;
            }
        } catch (Exception ex) {
        systemOutJTextArea.setText("Неправильные данные");
        }
    }//GEN-LAST:event_jButtonDeletedElementActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JTextField addValueJTextArea;
    private javax.swing.JTextField bracketNotationJTextField;
    private javax.swing.JButton byLevelTraversJButton;
    private javax.swing.JMenuItem correctTestAVLTreeMapJMenuItem;
    private javax.swing.JMenuItem correctTestRBTreeMapJMenuItem;
    private javax.swing.JMenuItem correctTestSimpleBSTreeMapJMenuItem;
    private javax.swing.JButton inOrderTraversJButton;
    private javax.swing.JButton jButtonDeletedElement;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel leftJPanel;
    private javax.swing.JMenuBar mainJMenuBar;
    private javax.swing.JSplitPane mainJSplitPane;
    private javax.swing.JButton makeAVLTreeJButton;
    private javax.swing.JButton makeBSTreeJButton1;
    private javax.swing.JButton makeBSTreeJButton2;
    private javax.swing.JButton makeRBTreeJButton;
    private javax.swing.JButton makeTreeJButton;
    private javax.swing.JPanel paintAreaJPanel;
    private javax.swing.JButton postOrderTraversJButton;
    private javax.swing.JButton preOrderTraversJButton;
    private javax.swing.JSpinner randomCountJSpinner;
    private javax.swing.JButton randomGenerateJButton;
    private javax.swing.JLabel randomJLabel;
    private javax.swing.JButton removeJButton;
    private javax.swing.JPanel rightJPanel;
    private javax.swing.JButton sortValuesJButton;
    private javax.swing.JTextArea systemOutJTextArea;
    private javax.swing.JMenu testingJMenu;
    private javax.swing.JLabel valuesJLabel;
    private javax.swing.JTextField valuesJTextField;
    // End of variables declaration//GEN-END:variables
}
